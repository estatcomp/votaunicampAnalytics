# Chunk 1: input
if (Sys.info()['sysname'] == 'Darwin') Sys.setlocale(locale='UTF-8')
library(stringr)
library(rvest)
library(googleVis)
library(leaflet)
page = read_html('http://votaunicamp.herokuapp.com/results/', encoding='UTF-8')
tbl = html_table(page)[[2]]
# Chunk 2: format
mytbl = data.frame(codigo=as.integer(str_extract(tbl$Curso, "^\\d+")),
nivel=NA,
curso=gsub("^(\\d+) - (.*)$", "\\2", tbl$Curso),
total=tbl$Total,
sim=as.integer(str_extract(tbl$Sim, "^\\d+")),
nao=as.integer(str_extract(tbl$Não, "^\\d+")),
abstencao=as.integer(str_extract(tbl$Abstenções, "^\\d+")))
nivel = str_extract(mytbl$curso, "(Dou|Mes)[a-z]+")
nivel[grepl("Mes", nivel)] = "Mestrado"
nivel[grepl("Dou", nivel)] = "Doutorado"
nivel[is.na(nivel)] = "Graduacao"
mytbl$nivel = nivel
rm(nivel)
mytbl$curso = gsub("(Mes|Dou).+ em (.*)$", "\\2", mytbl$curso)
# Chunk 3: melhoropcaoinstitutos
setwd("~/Documentos/Github/votaunicampAnalytics")
gradinst = cbind(nivel='Graduacao', read.table('Grad.csv', header=TRUE, sep=','))
doutinst = cbind(nivel='Doutorado', read.table('Dout.csv', header=TRUE, sep=','))
mestinst = cbind(nivel='Mestrado', read.table('Mestr.csv', header=TRUE, sep=','))
names(gradinst) = names(doutinst) = names(mestinst) = c('nivel', 'codigo', 'instituto', 'area')
inst = rbind(gradinst, doutinst, mestinst)
rm(gradinst, doutinst, mestinst)
mytbl = merge(mytbl, inst)
# Chunk 4
head(tbl)
# Chunk 5
ends = data.frame(instituto=c('IMECC', 'IFGW', 'IB', 'FEM', 'FEF', 'FEEC', 'FEC', 'FEA', 'FCM', 'IFCH','IEL', 'IA', 'IC', 'IE', 'IG', 'IQ', 'FE', 'FEAGRI', 'FEQ', 'PROFIS', 'FCF'),
lat=c(-22.81583,-22.81657,-22.81935,-22.81938,-22.81476,-22.82132,-22.81596,-22.82063,-22.83063,-22.81546, -22.81537, -22.81531, -22.81488, -22.81480, -22.81328, -22.81889, -22.81658, -22.81927, -22.81989, -22.81749, -22.81770),
lon=c(-47.06769,-47.06698,-47.06953,-47.06592,-47.07333,-47.06587,-47.06383,-47.06746,-47.06199,-47.06838,-47.06909, -47.07009, -47.06484, -47.06590, -47.06871, -47.06779, -47.06566, -47.06042,-47.06511, -47.06847, -47.07084 ))
# Chunk 6
#Proporção de Não
pnao = with(mytbl, nao/total)
mes = qnorm(.975)*sqrt(1/(4*mytbl$total))
ics = cbind(pmax(pnao-mes, 0), pmin(pnao+mes, 1))
colnames(ics) = c("lowerpnao", "upperpnao")
mytbl$pnao = pnao
mytbl = cbind(mytbl, ics)
rm(pnao, mes, ics)
# Chunk 7
#Proporção de Sim
psim = with(mytbl, sim/total)
mes = qnorm(.975)*sqrt(1/(4*mytbl$total))
ics = cbind(pmax(psim-mes, 0), pmin(psim+mes, 1))
mytbl$psim=psim
mytbl$lowerpsim=ics[,1]
mytbl$upperpsim=ics[,2]
rm(psim, mes, ics)
# Chunk 8
#Proporção de Abstenho
pabs = with(mytbl, abstencao/total)
mes = qnorm(.975)*sqrt(1/(4*mytbl$total))
ics = cbind(pmax(pabs-mes, 0), pmin(pabs+mes, 1))
mytbl$pabs=pabs
mytbl$lowerpabs=ics[,1]
mytbl$upperpabs=ics[,2]
# Chunk 9
library(data.table)
mytbl = as.data.table(mytbl)
dados = mytbl[, list(total=sum(total), sim=sum(sim), nao=sum(nao), abstencao=sum(abstencao)), by=instituto]
dados = as.data.frame(dados)
dados$psim = with(dados, sim/total)
dados$pnao = with(dados, nao/total)
dados$pabs = with(dados, abstencao/total)
# Chunk 11: grafbar
library(ggplot2)
ggplot(dados, aes(reorder(instituto, total), total)) + geom_bar(stat='identity') + coord_flip() + theme_bw()
# Chunk 12
library(formattable)
dados2 = dados[, c('instituto', 'nao', 'sim', 'abstencao', 'total')]
names(dados2) = c("Instituto", "Não", "Sim", "Abstenções", "Total")
formattable(dados2)
# Chunk 13: dados
tblnomes=html_table(page)[[3]]
pop=tblnomes[,c(4,5)]
# Chunk 14: boot
prop=function(pop, indices){
length(which(pop[indices,]$Voto == "Não"))/nrow(pop[indices,])
}
library(boot)
res_boot = boot(pop, prop, R=10000)
# Chunk 15: plot
newtbl = dados2[,c("Não","Sim","Abstenções")]
newtbl = as.data.frame(newtbl)
dados2$Instituto = as.character(dados2$Instituto)
rownames(newtbl)= dados2[[1]]
fit= prcomp(newtbl)
biplot(fit)
darea = mytbl[, list(total=sum(total), sim=sum(sim), nao=sum(nao), abstencao=sum(abstencao)), by= area]
darea = as.data.frame(darea)
darea$psim = with(darea, sim/total)
darea$pnao = with(darea, nao/total)
darea$pabs = with(darea, abstencao/total)
newtbl = dados2[,c("Não","Sim","Abstenções")]
newtbl = as.data.frame(newtbl)
dados2$Instituto = as.character(dados2$Instituto)
rownames(newtbl)= dados2[[1]]
fit= prcomp(newtbl)
biplot(fit)
newtbl = dados2[,c("Não","Sim","Abstenções")]
newtbl = as.data.frame(newtbl)
dados2$Instituto = as.character(dados2$Instituto)
rownames(newtbl)= dados2[[1]]
fit= prcomp(newtbl)
biplot(fit)
newtbl = dados2[,c("Não","Sim","Abstenções")]
newtbl = as.data.frame(newtbl)
dados2$Instituto = as.character(dados2$Instituto)
rownames(newtbl)= dados2[[1]]
fit= prcomp(newtbl)
biplot(fit)
darea = mytbl[, list(total=sum(total), sim=sum(sim), nao=sum(nao), abstencao=sum(abstencao)), by= area]
darea = as.data.frame(darea)
darea$psim = with(darea, sim/total)
darea$pnao = with(darea, nao/total)
darea$pabs = with(darea, abstencao/total)
View(darea)
View(mytbl)
View(darea)
View(mytbl)
install.packages('vegan')
library(vegan)
?vegdist
?data.frame
View(mytbl)
View(newtbl)
t(newtbl)
teste=vegdist(teste, method = "bray")
teste=vegdist(newtbl, method = "bray")
teste
head(teste)
plot(hclust(teste, method = "average"), hang = -1)
plot(hclust(teste, method = "average"), hang = -1, main = "Dendograma de Cluster", xlab = "Institutos", ylab = "Índice de Bray-Curtis")
teste=vegdist(newtbl, method = "jacard")
teste=vegdist(newtbl, method = "jaccard")
plot(hclust(teste, method = "average"), hang = -1, main = "Dendograma de Cluster", xlab = "Institutos", ylab = "Índice de Bray-Curtis")
?vegdist
teste=vegdist(newtbl, method = "manhattan")
plot(hclust(teste, method = "average"), hang = -1, main = "Dendograma de Cluster", xlab = "Institutos", ylab = "Índice de Bray-Curtis")
teste=vegdist(newtbl, method = "euclidean")
plot(hclust(teste, method = "average"), hang = -1, main = "Dendograma de Cluster", xlab = "Institutos", ylab = "Índice de Bray-Curtis")
teste=vegdist(newtbl, method = "canberra")
plot(hclust(teste, method = "average"), hang = -1, main = "Dendograma de Cluster", xlab = "Institutos", ylab = "Índice de Bray-Curtis")
teste=vegdist(newtbl, method = "kulczynski")
plot(hclust(teste, method = "average"), hang = -1, main = "Dendograma de Cluster", xlab = "Institutos", ylab = "Índice de Bray-Curtis")
teste=vegdist(newtbl, method = "gower")
plot(hclust(teste, method = "average"), hang = -1, main = "Dendograma de Cluster", xlab = "Institutos", ylab = "Índice de Bray-Curtis")
teste=vegdist(newtbl, method = "altGower")
plot(hclust(teste, method = "average"), hang = -1, main = "Dendograma de Cluster", xlab = "Institutos", ylab = "Índice de Bray-Curtis")
teste=vegdist(newtbl, method = "morisita")
plot(hclust(teste, method = "average"), hang = -1, main = "Dendograma de Cluster", xlab = "Institutos", ylab = "Índice de Bray-Curtis")
teste=vegdist(newtbl, method = "horn")
plot(hclust(teste, method = "average"), hang = -1, main = "Dendograma de Cluster", xlab = "Institutos", ylab = "Índice de Bray-Curtis")
teste=vegdist(newtbl, method = "mountford")
plot(hclust(teste, method = "average"), hang = -1, main = "Dendograma de Cluster", xlab = "Institutos", ylab = "Índice de Bray-Curtis")
teste=vegdist(newtbl, method = "raup")
plot(hclust(teste, method = "average"), hang = -1, main = "Dendograma de Cluster", xlab = "Institutos", ylab = "Índice de Bray-Curtis")
teste=vegdist(newtbl, method = "binomial")
plot(hclust(teste, method = "average"), hang = -1, main = "Dendograma de Cluster", xlab = "Institutos", ylab = "Índice de Bray-Curtis")
teste=vegdist(newtbl, method = "chao")
plot(hclust(teste, method = "average"), hang = -1, main = "Dendograma de Cluster", xlab = "Institutos", ylab = "Índice de Bray-Curtis")
teste=vegdist(newtbl, method = "cao")
plot(hclust(teste, method = "average"), hang = -1, main = "Dendograma de Cluster", xlab = "Institutos", ylab = "Índice de Bray-Curtis")
teste=vegdist(newtbl, method = "mahalanobis")
plot(hclust(teste, method = "average"), hang = -1, main = "Dendograma de Cluster", xlab = "Institutos", ylab = "Índice de Bray-Curtis")
met=c("mahalanobis","cao","binomial","horn","altGower","gower","kulczynski","canberra","manhattan","euclidean")
par(mfrow=c(5,2))
par(mfrow=c(5,2))
teste=vegdist(newtbl, method = met)
x=lapply(newtbl, vegdist, met)
plot(hclust(x, method = "average"), hang = -1, main = "Dendograma de Cluster", xlab = "Institutos", ylab = "Índice de Bray-Curtis")
plot(x)
x=replicate(newtbl, vegdist, met)
x=sapply(newtbl, vegdist, met)
View(x)
teste=vegdist(newtbl, method = met)
teste=vegdist(newtbl, method = "jaccard")
plot(hclust(x, method = "average"), hang = -1, main = "Dendograma de Cluster", xlab = "Institutos", ylab = "Índice de Bray-Curtis")
teste=vegdist(newtbl, method = "jaccard")
plot(hclust(newtbl, method = "average"), hang = -1, main = "Dendograma de Cluster", xlab = "Institutos", ylab = "Índice de Bray-Curtis")
teste=vegdist(newtbl, method = "jaccard")
plot(hclust(teste, method = "average"), hang = -1, main = "Dendograma de Cluster", xlab = "Institutos", ylab = "Índice de Bray-Curtis")
teste=vegdist(newtbl, method = "jaccard")
plot(hclust(teste, method = "average"), hang = -1, main = "Dendograma de Cluster", xlab = "Institutos", ylab = "Índice de Bray-Curtis")
teste=vegdist(newtbl, method = "bray")
plot(hclust(teste, method = "average"), hang = -1, main = "Dendograma de Cluster", xlab = "Institutos", ylab = "Índice de Bray-Curtis")
par(mfrow=c(1,2))
teste=vegdist(newtbl, method = "jaccard")
plot(hclust(teste, method = "average"), hang = -1, main = "Dendograma de Cluster", xlab = "Institutos", ylab = "Índice de Bray-Curtis")
teste=vegdist(newtbl, method = "bray")
plot(hclust(teste, method = "average"), hang = -1, main = "Dendograma de Cluster", xlab = "Institutos", ylab = "Índice de Bray-Curtis")
library(vegan)
library(stringr)
library(rvest)
library(googleVis)
library(leaflet)
if (Sys.info()['sysname'] == 'Darwin') Sys.setlocale(locale='UTF-8')
if (Sys.info()['sysname'] == 'Darwin') Sys.setlocale(locale='UTF-8')
library(vegan)
library(stringr)
library(rvest)
library(googleVis)
library(leaflet)
page = read_html('http://votaunicamp.herokuapp.com/results/', encoding='UTF-8')
tbl = html_table(page)[[2]]
head(tbl)
formattable(tbl)
library("formattable", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
formattable(tbl)
xtable(tbl)
head(tbl)
# Chunk 1: input
if (Sys.info()['sysname'] == 'Darwin') Sys.setlocale(locale='UTF-8')
library(vegan)
library(stringr)
library(rvest)
library(googleVis)
library(leaflet)
page = read_html('http://votaunicamp.herokuapp.com/results/', encoding='UTF-8')
tbl = html_table(page)[[2]]
# Chunk 2: format
mytbl = data.frame(codigo=as.integer(str_extract(tbl$Curso, "^\\d+")),
nivel=NA,
curso=gsub("^(\\d+) - (.*)$", "\\2", tbl$Curso),
total=tbl$Total,
sim=as.integer(str_extract(tbl$Sim, "^\\d+")),
nao=as.integer(str_extract(tbl$Não, "^\\d+")),
abstencao=as.integer(str_extract(tbl$Abstenções, "^\\d+")))
nivel = str_extract(mytbl$curso, "(Dou|Mes)[a-z]+")
nivel[grepl("Mes", nivel)] = "Mestrado"
nivel[grepl("Dou", nivel)] = "Doutorado"
nivel[is.na(nivel)] = "Graduacao"
mytbl$nivel = nivel
rm(nivel)
mytbl$curso = gsub("(Mes|Dou).+ em (.*)$", "\\2", mytbl$curso)
# Chunk 3: melhoropcaoinstitutos
setwd("~/Documentos/Github/votaunicampAnalytics")
gradinst = cbind(nivel='Graduacao', read.table('Grad.csv', header=TRUE, sep=','))
doutinst = cbind(nivel='Doutorado', read.table('Dout.csv', header=TRUE, sep=','))
mestinst = cbind(nivel='Mestrado', read.table('Mestr.csv', header=TRUE, sep=','))
names(gradinst) = names(doutinst) = names(mestinst) = c('nivel', 'codigo', 'instituto', 'area')
inst = rbind(gradinst, doutinst, mestinst)
rm(gradinst, doutinst, mestinst)
mytbl = merge(mytbl, inst)
# Chunk 4
head(tbl)
# Chunk 5
ends = data.frame(instituto=c('IMECC', 'IFGW', 'IB', 'FEM', 'FEF', 'FEEC', 'FEC', 'FEA', 'FCM', 'IFCH','IEL', 'IA', 'IC', 'IE', 'IG', 'IQ', 'FE', 'FEAGRI', 'FEQ', 'PROFIS', 'FCF'),
lat=c(-22.81583,-22.81657,-22.81935,-22.81938,-22.81476,-22.82132,-22.81596,-22.82063,-22.83063,-22.81546, -22.81537, -22.81531, -22.81488, -22.81480, -22.81328, -22.81889, -22.81658, -22.81927, -22.81989, -22.81749, -22.81770),
lon=c(-47.06769,-47.06698,-47.06953,-47.06592,-47.07333,-47.06587,-47.06383,-47.06746,-47.06199,-47.06838,-47.06909, -47.07009, -47.06484, -47.06590, -47.06871, -47.06779, -47.06566, -47.06042,-47.06511, -47.06847, -47.07084 ))
# Chunk 6
#Proporção de Não
pnao = with(mytbl, nao/total)
mes = qnorm(.975)*sqrt(1/(4*mytbl$total))
ics = cbind(pmax(pnao-mes, 0), pmin(pnao+mes, 1))
colnames(ics) = c("lowerpnao", "upperpnao")
mytbl$pnao = pnao
mytbl = cbind(mytbl, ics)
rm(pnao, mes, ics)
# Chunk 7
#Proporção de Sim
psim = with(mytbl, sim/total)
mes = qnorm(.975)*sqrt(1/(4*mytbl$total))
ics = cbind(pmax(psim-mes, 0), pmin(psim+mes, 1))
mytbl$psim=psim
mytbl$lowerpsim=ics[,1]
mytbl$upperpsim=ics[,2]
rm(psim, mes, ics)
# Chunk 8
#Proporção de Abstenho
pabs = with(mytbl, abstencao/total)
mes = qnorm(.975)*sqrt(1/(4*mytbl$total))
ics = cbind(pmax(pabs-mes, 0), pmin(pabs+mes, 1))
mytbl$pabs=pabs
mytbl$lowerpabs=ics[,1]
mytbl$upperpabs=ics[,2]
# Chunk 9
library(data.table)
mytbl = as.data.table(mytbl)
dados = mytbl[, list(total=sum(total), sim=sum(sim), nao=sum(nao), abstencao=sum(abstencao)), by=instituto]
dados = as.data.frame(dados)
dados$psim = with(dados, sim/total)
dados$pnao = with(dados, nao/total)
dados$pabs = with(dados, abstencao/total)
# Chunk 11: grafbar
library(ggplot2)
ggplot(dados, aes(reorder(instituto, total), total)) + geom_bar(stat='identity') + coord_flip() + theme_bw()
# Chunk 12
library(formattable)
dados2 = dados[, c('instituto', 'nao', 'sim', 'abstencao', 'total')]
names(dados2) = c("Instituto", "Não", "Sim", "Abstenções", "Total")
formattable(dados2)
# Chunk 13: dados
tblnomes=html_table(page)[[3]]
pop=tblnomes[,c(4,5)]
# Chunk 14: boot
prop=function(pop, indices){
length(which(pop[indices,]$Voto == "Não"))/nrow(pop[indices,])
}
library(boot)
res_boot = boot(pop, prop, R=10000)
# Chunk 15: plot
newtbl = dados2[,c("Não","Sim","Abstenções")]
newtbl = as.data.frame(newtbl)
dados2$Instituto = as.character(dados2$Instituto)
rownames(newtbl)= dados2[[1]]
fit= prcomp(newtbl)
biplot(fit)
# Chunk 16: prop-area
darea = mytbl[, list(total=sum(total), sim=sum(sim), nao=sum(nao), abstencao=sum(abstencao)), by= area]
darea = as.data.frame(darea)
darea$psim = with(darea, sim/total)
darea$pnao = with(darea, nao/total)
darea$pabs = with(darea, abstencao/total)
# Chunk 17: dendograma
par(mfrow=c(1,2))
teste=vegdist(newtbl, method = "jaccard")
plot(hclust(teste, method = "average"), hang = -1, main = "Dendograma de Jaccard", xlab = "Institutos", ylab = "Índice de Jaccard")
teste=vegdist(newtbl, method = "bray")
plot(hclust(teste, method = "average"), hang = -1, main = "Dendograma de Bray-Curtis", xlab = "Institutos", ylab = "Índice de Bray-Curtis")
?head
setwd("~/Documentos/Github/votaunicampAnalytics")
gradinst = cbind(nivel='Graduacao', read.table('Grad.csv', header=TRUE, sep=','))
doutinst = cbind(nivel='Doutorado', read.table('Dout.csv', header=TRUE, sep=','))
mestinst = cbind(nivel='Mestrado', read.table('Mestr.csv', header=TRUE, sep=','))
names(gradinst) = names(doutinst) = names(mestinst) = c('nivel', 'codigo', 'instituto', 'area')
inst = rbind(gradinst, doutinst, mestinst)
rm(gradinst, doutinst, mestinst)
mytbl = merge(mytbl, inst)
View(mytbl)
rm(pnao, mes, ics)
pnao = with(mytbl, nao/total)
mes = qnorm(.975)*sqrt(1/(4*mytbl$total))
ics = cbind(pmax(pnao-mes, 0), pmin(pnao+mes, 1))
colnames(ics) = c("lowerpnao", "upperpnao")
mytbl$pnao = pnao
mytbl = cbind(mytbl, ics)
rm(pnao, mes, ics)
psim = with(mytbl, sim/total)
mes = qnorm(.975)*sqrt(1/(4*mytbl$total))
ics = cbind(pmax(psim-mes, 0), pmin(psim+mes, 1))
mytbl$psim=psim
mytbl$lowerpsim=ics[,1]
mytbl$upperpsim=ics[,2]
rm(psim, mes, ics)
pabs = with(mytbl, abstencao/total)
mes = qnorm(.975)*sqrt(1/(4*mytbl$total))
ics = cbind(pmax(pabs-mes, 0), pmin(pabs+mes, 1))
mytbl$pabs=pabs
mytbl$lowerpabs=ics[,1]
mytbl$upperpabs=ics[,2]
formattable(mytbl)
mytbl
View(mytbl)
library(data.table)
mytbl = as.data.table(mytbl)
dados = mytbl[, list(total=sum(total), sim=sum(sim), nao=sum(nao), abstencao=sum(abstencao)), by=instituto]
dados = as.data.frame(dados)
dados$psim = with(dados, sim/total)
dados$pnao = with(dados, nao/total)
formattable(dados2)
View(dados)
formattable(dados)
dados[[-c(2,3,4,5)]]
dados[[,-c(2,3,4,5)]]
dados[,-c(2,3,4,5)]
formattable(dados[,-c(2,3,4,5)])
formattable(round(dados[,-c(2,3,4,5)],2)
)
library(ggplot2)
ggplot(dados, aes(reorder(instituto, total), total)) + geom_bar(stat='identity') + coord_flip() + theme_bw()
ends = merge(ends, dados)
pal= colorQuantile("RdBu",ends$propn, n=8)
map = leaflet()
map = addTiles(map)
map = addCircleMarkers(map, lat=ends$lat, lng=ends$lon, popup = ends$instituto, color = pal(ends$pnao))
map
library(ggplot2)
ggplot(dados, aes(reorder(instituto, total), total)) + geom_bar(stat='identity') + coord_flip() + theme_bw()
ends = data.frame(instituto=c('IMECC', 'IFGW', 'IB', 'FEM', 'FEF', 'FEEC', 'FEC', 'FEA', 'FCM', 'IFCH','IEL', 'IA', 'IC', 'IE', 'IG', 'IQ', 'FE', 'FEAGRI', 'FEQ', 'PROFIS', 'FCF'),
lat=c(-22.81583,-22.81657,-22.81935,-22.81938,-22.81476,-22.82132,-22.81596,-22.82063,-22.83063,-22.81546, -22.81537, -22.81531, -22.81488, -22.81480, -22.81328, -22.81889, -22.81658, -22.81927, -22.81989, -22.81749, -22.81770),
lon=c(-47.06769,-47.06698,-47.06953,-47.06592,-47.07333,-47.06587,-47.06383,-47.06746,-47.06199,-47.06838,-47.06909, -47.07009, -47.06484, -47.06590, -47.06871, -47.06779, -47.06566, -47.06042,-47.06511, -47.06847, -47.07084 ))
pnao = with(mytbl, nao/total)
mes = qnorm(.975)*sqrt(1/(4*mytbl$total))
ics = cbind(pmax(pnao-mes, 0), pmin(pnao+mes, 1))
colnames(ics) = c("lowerpnao", "upperpnao")
mytbl$pnao = pnao
mytbl = cbind(mytbl, ics)
rm(pnao, mes, ics)
psim = with(mytbl, sim/total)
mes = qnorm(.975)*sqrt(1/(4*mytbl$total))
ics = cbind(pmax(psim-mes, 0), pmin(psim+mes, 1))
mytbl$psim=psim
mytbl$lowerpsim=ics[,1]
mytbl$upperpsim=ics[,2]
rm(psim, mes, ics)
pabs = with(mytbl, abstencao/total)
mes = qnorm(.975)*sqrt(1/(4*mytbl$total))
ics = cbind(pmax(pabs-mes, 0), pmin(pabs+mes, 1))
mytbl$pabs=pabs
mytbl$lowerpabs=ics[,1]
mytbl$upperpabs=ics[,2]
mytbl = as.data.table(mytbl)
dados = mytbl[, list(total=sum(total), sim=sum(sim), nao=sum(nao), abstencao=sum(abstencao)), by=instituto]
dados = as.data.frame(dados)
dados$psim = with(dados, sim/total)
dados$pnao = with(dados, nao/total)
dados$pabs = with(dados, abstencao/total)
formattable(dados[,-c(2,3,4,5)])
ends = merge(ends, dados)
pal= colorQuantile("RdBu",ends$propn, n=8)
map = leaflet()
map = addTiles(map)
map = addCircleMarkers(map, lat=ends$lat, lng=ends$lon, popup = ends$instituto, color = pal(ends$pnao))
map
library(ggplot2)
ggplot(dados, aes(reorder(instituto, total), total)) + geom_bar(stat='identity') + coord_flip() + theme_bw()
total
View(dados)
View(dados2)
View(dados)
dados
?ggplot
ggplot(dados, aes(reorder(instituto, total), total)) + geom_bar(stat='identity') + coord_flip() + theme_bw()
library(ggplot2)
ggplot(dados, aes(reorder(instituto, total), total)) + geom_bar(stat='identity') + coord_flip() + theme_bw()
newtbl = dados2[,c("Não","Sim","Abstenções")]
newtbl = as.data.frame(newtbl)
dados2$Instituto = as.character(dados2$Instituto)
rownames(newtbl)= dados2[[1]]
fit= prcomp(newtbl)
biplot(fit)
